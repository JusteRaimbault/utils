;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Basic Stat functions
;;;;;;;;;;;;;;;;;;;;;;;;;;;

to-report utils:statistics:summary [x]
  report (word "length = " length x "\n mean = " mean x "\n median = " median x "\n min = " min x "\n max = " max x)
end


; histogram retrieving count list
; nbreaks = number of segments
; reports counts
to-report utils:statistics:hist [x nbreaks]
  ifelse x != [] [
  let counts utils:list:rep 0 nbreaks
  let m min x let ma max x
  foreach x [
      ? ->
    let index floor ((? - m)/(ma - m)*(nbreaks - 1))
    set counts replace-item index counts (item index counts + 1)
  ]

  report counts
  ][
    report []
  ]
end



; quantile function
to-report utils:statistics:quantile [x q]
  if length x = 0 [report 0]
  report item (floor (q * length x)) (sort x)
end



;;
; pearson correlation
to-report utils:statistics:pearson-correlation [x y]
  let mx mean x let xx map [? -> ? - mx] x let my mean y let yy map [? -> ? - my] y
  let sx standard-deviation x let sy standard-deviation y
  if sx = 0 or sy = 0 [report 0]
  report mean (utils:list:times-element-wise xx yy) / (sx * sy)
end


;;
; covariance
;  cov(X,Y) = E(xy)-E(x)E(y)
to-report utils:statistics:covariance [x y]
  report (mean utils:list:times-element-wise x y) - (mean x * mean y)
end
